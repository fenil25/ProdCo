
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Lenovo
 */
public class RegisterOrder extends javax.swing.JFrame {

    private Connection con;
    HashMap<String, Integer> cust = new HashMap<>();
    private int orderId, updateFlag;
    
    /**
     * Creates new form RegisterOrder
     */
    public RegisterOrder() {
        initComponents();
    }
    
    public RegisterOrder(Connection con, int updateFlag, int oid, String name, String pon, String dl, String cname) throws SQLException, ParseException {
        this.con = con;
        this.updateFlag = updateFlag;
        this.orderId = oid;
        initComponents();
        Statement st = con.createStatement();
        ResultSet r = st.executeQuery("SELECT * FROM CUSTOMER");
        while(r.next()){
            customerName.addItem(r.getString("first_name") + " " + r.getString("last_name"));
            cust.put(r.getString("first_name") + " " + r.getString("last_name"), Integer.parseInt(r.getString("idCustomer")));
        }
        AutoCompletion.enable(customerName);
        
        if(updateFlag==1){
            orderName.setText(name);
            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            placedOn.setDate(df.parse(pon));
            deadline.setDate(df.parse(dl));
            customerName.setSelectedItem(cname);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        orderNameLabel = new javax.swing.JLabel();
        orderName = new javax.swing.JTextField();
        placedOnLabel = new javax.swing.JLabel();
        deadlineLabel = new javax.swing.JLabel();
        placedOn = new org.jdesktop.swingx.JXDatePicker();
        deadline = new org.jdesktop.swingx.JXDatePicker();
        customerNameLabel = new javax.swing.JLabel();
        customerName = new javax.swing.JComboBox<>();
        registerOrder = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        orderNameLabel.setText("Order Name");

        placedOnLabel.setText("Placed On");

        deadlineLabel.setText("Deadline");

        customerNameLabel.setText("Customer Name");

        registerOrder.setText("Register Order");
        registerOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(orderNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(placedOnLabel)
                            .addComponent(deadlineLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(placedOn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(orderName)
                            .addComponent(deadline, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(customerName, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(registerOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(orderName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(placedOn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(deadline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(placedOnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deadlineLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(customerNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(registerOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registerOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerOrderActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat ft = new SimpleDateFormat("yyyy-MM-dd");
        String name = orderName.getText();
        String placed_on = ft.format(placedOn.getDate());
        String deadLine = ft.format(deadline.getDate());
        String cus_id = cust.get(customerName.getSelectedItem().toString())+"";
        
        String query1 = String.format("INSERT INTO ORDERS (order_name, placed_on, deadline, customer_id) VALUES('%s', '%s', '%s', %s);", 
                    name, placed_on, deadLine, cus_id);
        
        String query2 = String.format("UPDATE ORDERS SET order_name = '%s', placed_on = '%s', deadline = '%s', customer_id = %s"
                + " WHERE idOrder = %s;",
                name, placed_on, deadLine, cus_id, orderId);
        
        System.out.println(query1);
        System.out.println(query2);
        
        if(updateFlag == 0){
            try {
                Statement addq = con.createStatement();
                JFrame f = new JFrame();
                addq.executeUpdate(query1);
                JOptionPane.showMessageDialog(f, "Order registered successfully");
                DisplayOrders dod = new DisplayOrders(con);
                dod.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(AddDepartment.class.getName()).log(Level.SEVERE, null, ex);
                JFrame f = new JFrame();
                JOptionPane.showMessageDialog(f, "Unable to Register Your Order");
            }
        } else {
            try {
                Statement addq = con.createStatement();
                JFrame f = new JFrame();
                addq.executeUpdate(query2);
                JOptionPane.showMessageDialog(f, "Order updated successfully");
                DisplayOrders dod = new DisplayOrders(con);
                dod.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(AddDepartment.class.getName()).log(Level.SEVERE, null, ex);
                JFrame f = new JFrame();
                JOptionPane.showMessageDialog(f, "Unable to update Your Order");
            }
        }
    }//GEN-LAST:event_registerOrderActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</orderName>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> customerName;
    private javax.swing.JLabel customerNameLabel;
    private org.jdesktop.swingx.JXDatePicker deadline;
    private javax.swing.JLabel deadlineLabel;
    private javax.swing.JTextField orderName;
    private javax.swing.JLabel orderNameLabel;
    private org.jdesktop.swingx.JXDatePicker placedOn;
    private javax.swing.JLabel placedOnLabel;
    private javax.swing.JButton registerOrder;
    // End of variables declaration//GEN-END:variables
}
