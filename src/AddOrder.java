
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Lenovo
 */
public class AddOrder extends javax.swing.JFrame {

    private Connection con;
    private int updateFlag, oid, pid;
    HashMap<String, Integer> orderh = new HashMap<>();
    HashMap<String, Integer> producth = new HashMap<>();

    /**
     * Creates new form AddOrder
     */
    public AddOrder() {
        initComponents();
    }
    
    public AddOrder(Connection con, int updateFlag, int k1, int k2, String orderName, String productName, String stg, int q) throws SQLException {
        this.con = con;
        this.updateFlag = updateFlag;
        this.oid = k1;
        this.pid = k2;
        initComponents();
        Statement st = con.createStatement();
        ResultSet r = st.executeQuery("SELECT * FROM orders");
        while(r.next()){
            orderField.addItem(r.getString("order_name"));
            orderh.put(r.getString("order_name"), Integer.parseInt(r.getString("idOrder")));
        }
        Statement st2 = con.createStatement();
        ResultSet r2 = st2.executeQuery("SELECT * FROM product");
        while(r2.next()){
            productField.addItem(r2.getString("name"));
            producth.put(r2.getString("name"), Integer.parseInt(r2.getString("idProduct")));
        }
        AutoCompletion.enable(orderField);
        AutoCompletion.enable(productField);
        
        if(updateFlag == 1){
            stageField.setSelectedItem(stg);
            quantityField.setText(q+"");
            orderField.setSelectedItem(orderName);
            productField.setSelectedItem(productName);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        orderField = new javax.swing.JComboBox<>();
        stageField = new javax.swing.JComboBox<>();
        productField = new javax.swing.JComboBox<>();
        quantityField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Order");

        jLabel4.setText("Product");

        jLabel5.setText("Stage");

        jLabel6.setText("Quanity");

        stageField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Placed", "In Progress", "Completed" }));

        addButton.setText("Add Product To Order");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(stageField, 0, 177, Short.MAX_VALUE)
                                    .addComponent(orderField, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(productField, 0, 177, Short.MAX_VALUE)
                                    .addComponent(quantityField)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(orderField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(productField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(stageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(quantityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        String order = orderh.get(orderField.getSelectedItem().toString()+"")+"";
        String product = producth.get(productField.getSelectedItem().toString()+"")+"";
        String stage = stageField.getSelectedItem().toString()+"";
        String quantity = quantityField.getText();
        
        String query1 = String.format("INSERT INTO order_product (idOrder, idProduct, stage, quantity) VALUES(%s, %s, '%s', %s);", 
                order, product, stage, quantity);
        
        String query2 = String.format("UPDATE order_product SET idOrder = %s, idProduct = %s, stage = '%s', quantity = %s"
                + " WHERE idOrder = %s AND idProduct = %s;", 
                order, product, stage, quantity, oid, pid);
        
        System.out.println(query1);
        System.out.println(query2);
        try {
            Statement addq = con.createStatement();
            JFrame f = new JFrame();
            if(updateFlag == 0){
                addq.executeUpdate(query1);
                JOptionPane.showMessageDialog(f, "Product Entry For Given Order added successfully");
            } else {
                addq.executeUpdate(query2);
                JOptionPane.showMessageDialog(f, "Product Entry For Given Order updated successfully");
            }
        } catch (SQLIntegrityConstraintViolationException e){
            JFrame f = new JFrame();
            JOptionPane.showMessageDialog(f, "The given entry for Product-Field already Exists");
        }
        catch (SQLException ex) {
            Logger.getLogger(AddOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JComboBox<String> orderField;
    private javax.swing.JComboBox<String> productField;
    private javax.swing.JTextField quantityField;
    private javax.swing.JComboBox<String> stageField;
    // End of variables declaration//GEN-END:variables
}
